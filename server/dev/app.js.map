{"version":3,"sources":["webpack:///./src/app/errmsg.service.ts","webpack:///./src/app/logger.service.ts","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/categories.component.ts","webpack:///./src/app/regexpermutation.service.ts","webpack:///./src/app/categories.component.html","webpack:///./src/app/categories.component.css","webpack:///./src/app/historics.component.ts","webpack:///./src/app/historics.component.html","webpack:///./src/app/populars.component.ts","webpack:///./src/app/populars.component.html","webpack:///./src/app/usermsg.component.ts","webpack:///./src/app/models/usermsg.model.ts","webpack:///./src/app/usermsg.component.html","webpack:///./src/app/usermsg.component.css","webpack:///./src/app/searchbox.component.ts","webpack:///./src/app/searchbox.component.html","webpack:///./src/app/searchbox.component.css","webpack:///./src/app/filterbox.component.ts","webpack:///./src/app/models/filterbox.model.ts","webpack:///./src/app/filterbox.component.html","webpack:///./src/app/filterbox.component.css","webpack:///./src/app/checkbox.component.ts","webpack:///./src/app/models/checkbox.model.ts","webpack:///./src/app/checkbox.component.html","webpack:///./src/app/checkbox.component.css","webpack:///./src/app/checkbox.directive.ts","webpack:///./src/app/exercises.component.ts","webpack:///./src/app/exercises.component.html","webpack:///./src/app/httpcall.module.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["\r\n\r\nimport {Injectable,\r\n        Inject\r\n    } from '@angular/core';\r\nimport {TranslateService} from 'ng2-translate' \r\nimport {Logger} from './logger.service'\r\nimport {ConfigService} from '@ngx-config/core';\r\nimport {HttpCallModel} from './models/httpcall.model'\r\nimport {HttpCallService} from './httpcall.module';\r\n      \r\n\r\n@Injectable()\r\nexport class ErrMsgService {\r\n    \r\n    \r\n    constructor(\r\n        @Inject(Logger) private logger:Logger,\r\n        private translate:TranslateService,\r\n        private config:ConfigService,\r\n        private call:HttpCallService      \r\n        ){\r\n    }\r\n    \r\n    public onConnError(type:string, err:any, callsrv:HttpCallModel){\r\n      \r\n        //show error in usrmsessage component\r\n        callsrv.owner.userMessage(this.translate.instant('errorcode.connection.' + err.code), 'err');\r\n        //recall untill max attempt reach\r\n        if(callsrv.attempt < this.config.getSettings().api.retry.attempt){\r\n            //le reconnect retry msg\r\n            setTimeout(() => {\r\n                //msg\r\n                callsrv.owner.userMessage(this.translate.instant('errormsg.connection.retry', {count:this.config.getSettings().api.retry.delay/1000}), 'ok');    \r\n            }, 1000);\r\n            //le reconnect retry\r\n            setTimeout(() => {\r\n                //recall le service http en updatant le observer\r\n                callsrv.obs = this.call.callService(\r\n                    callsrv.srv, \r\n                    callsrv.pid, \r\n                    callsrv.search\r\n                );\r\n                callsrv.owner.httpCallSubscriber(callsrv);\r\n                //console.log('+++ =callsrv.obs');\r\n                //console.log(callsrv);\r\n                //change le nbr attempt\r\n                callsrv.attempt++;\r\n            }, callsrv.owner.config.getSettings().api.retry.delay);\r\n        }else{\r\n            //nbr max attemps\r\n            callsrv.owner.userMessage(this.translate.instant('errormsg.connection.maxattempt'), 'warn');\r\n        }\r\n   }\r\n    \r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/errmsg.service.ts","import {Injectable} from '@angular/core';\r\nimport {ConfigService } from '@ngx-config/core';      \r\n\r\n@Injectable()\r\nexport class Logger {\r\n    \r\n    private count:number = 0;\r\n    \r\n    constructor(\r\n        private config:ConfigService      \r\n        ){\r\n        //this.log('Logger.constructor()');\r\n    }\r\n    \r\n    public log(msg: any) {\r\n        if(this.config.getSettings().logger){\r\n            if(typeof(msg) == 'string' || typeof(msg) == 'number'){\r\n                console.log((this.count++) + ': ' + msg); \r\n            }else{\r\n                console.log((this.count++) + ': [');\r\n                console.log(msg);\r\n                console.log(']');\r\n                \r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    public error(msg: string) {\r\n        console.error('[' + (this.count++) + ']: ' + msg);\r\n    }\r\n    \r\n    public warn(msg: string) {\r\n        if(this.config.getSettings().logger){\r\n            if(typeof(msg) == 'string' || typeof(msg) == 'number'){\r\n                console.warn((this.count++) + ': ' + msg);  \r\n            }else{\r\n                console.warn((this.count++) + ': [');\r\n                console.warn(msg);\r\n                console.warn(']');\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/logger.service.ts","\r\nimport {enableProdMode} from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (process.env.ENV === 'production') {\r\n    enableProdMode();\r\n    console.log('-- PROD MODE --');\r\n}else{\r\n    console.log('-- DEV MODE --');\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/main.ts","/**\n * node_modules\n */\n\nimport {Http\n        } from '@angular/http'\n\nimport {ConfigModule, \n        ConfigLoader, \n        ConfigService \n      } from '@ngx-config/core';\nimport {ConfigHttpLoader \n      } from '@ngx-config/http-loader';\t  \n     \nimport {NgModule,\n        APP_INITIALIZER \n      } from '@angular/core'\n      \nimport {BrowserModule \n        } from '@angular/platform-browser'\n\nimport {TranslateModule, \n        TranslateLoader, \n        TranslateStaticLoader, \n        TranslateService \n      } from 'ng2-translate'\n       \n \n      \n\n/**\n * local appz\n * \n */\n\nimport {HttpCallModule,\n        HttpCallService\n      } from './httpcall.module'\nimport {AppComponent } from './app.component'\nimport {CategoriesComponent } from './categories.component'\nimport {HistoricsComponent } from './historics.component'\nimport {PopularsComponent } from './populars.component'\nimport {UserMsgComponent } from './usermsg.component'\nimport {SearchBoxComponent} from './searchbox.component'\nimport {FilterBoxComponent} from './filterbox.component'\nimport {CheckBoxComponent} from './checkbox.component'\nimport {CheckBoxDirective} from './checkbox.directive'\nimport {ExercisesComponent} from './exercises.component'\nimport {Logger } from './logger.service'\n\n\nexport function translateFactory(http:Http):TranslateStaticLoader {\n  //console.log(__filename + ' function.translateFactory()');\n  return new TranslateStaticLoader(http, 'http://127.0.0.2/assets/i18n', '.json');\n}\n\nexport function configFactory(http: Http):ConfigLoader {\n  //console.log(__filename + ' function.configFactory()');\n  return new ConfigHttpLoader(http, 'http://127.0.0.2/assets/config/config.json'); \n}\n\n@NgModule({\n  imports: [ \n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: (configFactory),\n\t    deps: [Http]\n\t}),\n    TranslateModule.forRoot({\n      provide: TranslateLoader,\n      useFactory: (translateFactory),\n      deps: [Http]\n    }),\n    HttpCallModule.forRoot({\n      provide: HttpCallService,\n      deps: [Http, ConfigService]\n    }),\n    BrowserModule\n    ],\n  declarations: [ \n    AppComponent,\n    CategoriesComponent,\n    ExercisesComponent,\n    HistoricsComponent,\n    PopularsComponent,\n    UserMsgComponent,\n    CheckBoxComponent,\n    CheckBoxDirective,\n    SearchBoxComponent,\n    FilterBoxComponent\n    ],\n  providers: [\n    Logger\n  ],\n  bootstrap: [ \n    AppComponent \n    ]\n})\n\nexport class AppModule {}\n  \n\n\n\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/app.module.ts","\n\nimport {Component,\n        HostBinding,\n        Injector,\n        ReflectiveInjector } from '@angular/core'\nimport {TranslateService } from 'ng2-translate'\nimport {ConfigService } from '@ngx-config/core';\nimport {Logger } from './logger.service'\nimport {HttpCallService } from './httpcall.module';\n\n\n@Component({\n  moduleId: module.id.toString(),\n  selector: 'appz',\n  template: require('./app.component.html'),\n  styles: [\n    require('./app.component.css')\n    ],\n  providers:[\n    \n  ]   \n})\nexport class AppComponent { \n\n  \n  private params:Object;\n\n  constructor(private logger:Logger, \n              private translate: TranslateService, \n              private config:ConfigService\n    ) {\n\n    \n    //constructor\n    //this.logger.log('AppComponent.constructor()');\n    \n    //version\n    this.logger.log('AppComponent.version: ' + this.config.getSettings().version);\n    //add langs\n    this.translate.addLangs(['en','fr']);\n    //this language will be used as a fallback \n    //when a translation isn't found in the current language\n    //so it wil load it before the other ones\n    this.translate.setDefaultLang('en');\n    //the lang to use, if the lang isn't available, \n    //it will use the current loader to get them\n    let browserLang = this.translate.getBrowserLang();\n    this.translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n    //this.translate.use('en');\n    //param to show \n    this.params = {\n        version: this.config.getSettings().version\n    };\n    \n  }\n\n  ngOnViewInit(){\n    \n\n  }\n\n  ngOnInit() {\n    //this.logger.log('AppComponent.ngOnInit()');\n  }\n}\n\n\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/app.component.ts","module.exports = \"<div class=\\\"title\\\">\\r\\n    <h1 [innerHTML]=\\\"'app.title' | translate:params\\\"></h1>\\r\\n</div>\\r\\n<div class=\\\"section\\\">    \\r\\n    <div>\\r\\n        <categories></categories>\\r\\n    </div>\\r\\n    <div>\\r\\n        <exercises></exercises>\\r\\n    </div> \\r\\n</div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 642\n// module chunks = 1","module.exports = \"div.title{\\r\\nborder-bottom: 1px solid #aaa;\\r\\nmargin-bottom: 20px;\\r\\n}\\r\\ndiv.section div{\\r\\nborder-bottom: 1px dotted #999;\\r\\nmargin-bottom: 20px;\\r\\npadding-bottom: 10px;\\t\\r\\n}\\r\\ndiv.section div:last-child{\\r\\nborder-bottom: 0;\\r\\nmargin-bottom: 0;\\r\\npadding-bottom: 0;\\t\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 643\n// module chunks = 1","\r\n\r\nimport {Component,\r\n        Input,\r\n        DoCheck,\r\n        Injector,\r\n        ReflectiveInjector } from '@angular/core'\r\nimport {Observable} from 'rxjs/Observable'\r\nimport {TranslateService } from 'ng2-translate'\r\nimport {ConfigService \r\n    } from '@ngx-config/core';\r\n\r\nimport {UserMsgComponent } from './usermsg.component'\r\nimport {CategoryModel } from './models/category.model'\r\nimport {FilterBoxModel } from './models/filterbox.model'\r\nimport {CheckBoxModel } from './models/checkbox.model'\r\nimport {UserMsgModel} from './models/usermsg.model'\r\nimport {Logger } from './logger.service'\r\n\r\n\r\nimport {HttpCallService } from './httpcall.module';\r\nimport {HttpCallModel\r\n    } from './models/httpcall.model'\r\n\r\nimport {RegexPermutationService} from './regexpermutation.service'\r\nimport {ErrMsgService } from './errmsg.service'\r\n\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'categories',\r\n    template: require('./categories.component.html'),\r\n    styles: [\r\n        require('./categories.component.css')\r\n        ],\r\n    providers: [\r\n        RegexPermutationService,\r\n        ErrMsgService\r\n        ]        \r\n        \r\n})\r\n\r\nexport class CategoriesComponent{\r\n\r\n    private filterBox:FilterBoxModel;\r\n    private arrFilteredCategories:CheckBoxModel[];\r\n    private arrAllCategories:CheckBoxModel[];\r\n    private userMsg:UserMsgModel;\r\n    private userMsgCountResult:UserMsgModel;\r\n    private isDataLoaded:boolean = false;\r\n    private lastCallPid:number = 0;\r\n    \r\n    constructor(\r\n                private logger:Logger, \r\n                private translate: TranslateService,\r\n                private config:ConfigService,  \r\n                private call:HttpCallService,\r\n                private regPermutation:RegexPermutationService,\r\n                private errMsg:ErrMsgService\r\n        ){\r\n        //this.logger.log('CategoriesComponent.constructor()');\r\n        //if we have a pre filter for de category listing filterbox\r\n        this.filterBox = {\r\n            value: '',\r\n            disabled: true,\r\n            placeholder: ''\r\n        };\r\n        //le placeholder translation\r\n        this.translate.get('filterbox.placeholder').subscribe(str => {\r\n            this.filterBox.placeholder = str;        \r\n        });\r\n        //user messgae\r\n        this.userMessage();\r\n        this.userMessageCountResult('0');\r\n    }\r\n\r\n    onFilterboxInputValueChange(str:string){\r\n         this.logger.log('CategoriesComponent.onFilterboxInputValueChange(' + str + ')');\r\n         this.filterCategoriesToDisplay(str);\r\n        \r\n    }\r\n\r\n    \r\n    filterCategoriesToDisplay(str:string){\r\n        this.logger.log('CategoriesComponent.filterCategoriesToDisplay(' + str + ')');\r\n        //sinon on filtre selon la string input value\r\n        if(str != ''){\r\n            var strRegex = this.regPermutation.wordPermutation(this.regPermutation.split(str));\r\n            //console.log('[1]: \"' + strRegex + '\"');\r\n            //push       \r\n            this.arrFilteredCategories = this.arrAllCategories\r\n                .filter(function(obj:CheckBoxModel){\r\n                    if(obj.label.match(new RegExp(this.reg, 'i')) != null){\r\n                        return obj;\r\n                    }\r\n                }, {reg: strRegex});\r\n            //console.log('count pass [1]:' + this.arrFilteredCategories.length); \r\n           \r\n            //si vide on cherche juste si il y a 1 mot compose de au moins\r\n            //2 carateres\r\n            var arrStrWord = this.regPermutation.split(str);\r\n            if(!this.arrFilteredCategories.length && arrStrWord.length == 1 && arrStrWord[0].length > 1){\r\n                strRegex = this.regPermutation.wordSpace(arrStrWord[0]);\r\n                //console.log('[2]: \"' + strRegex + '\"');\r\n                //push       \r\n                this.arrFilteredCategories = this.arrAllCategories\r\n                    .filter(function(obj:CheckBoxModel){\r\n                        //console.log(obj.label.match(new RegExp(this.reg, 'i')));\r\n                        if(obj.label.match(new RegExp(this.reg, 'i')) != null){\r\n                            return obj;\r\n                        }\r\n                    }, {reg: strRegex});\r\n                //console.log('count pass [2]:' + this.arrFilteredCategories.length);\r\n                     \r\n                \r\n            }\r\n            //si toujours vide alors on enleve tout\r\n            if(!this.arrFilteredCategories.length){\r\n                this.arrFilteredCategories = [];\r\n                //console.log('count pass [3]:' + this.arrFilteredCategories.length);\r\n            }\r\n\r\n        }else{\r\n            this.arrFilteredCategories = this.arrAllCategories; \r\n        }\r\n        //on affiche le count de result\r\n        this.userMessageCountResult(this.arrFilteredCategories.length.toString());\r\n    }\r\n\r\n    userMessage(str:string = '', style:string = ''){\r\n        this.userMsg = {\r\n            class: style,       \r\n            value: str\r\n        }; \r\n    }\r\n\r\n    userMessageCountResult(str:string = '', style:string = 'counter'){\r\n        this.userMsgCountResult = {\r\n            class: style,       \r\n            value: str\r\n        }; \r\n    }\r\n\r\n    httpCallSubscriber(callsrv:HttpCallModel){\r\n        callsrv.obs.subscribe(arr => {\r\n            this.logger.log('timer:' + (new Date().getTime() - callsrv.timestamp));\r\n            this.logger.log('pid:' + callsrv.pid);\r\n            //this.logger.log(callsrv);\r\n            //si pas le dernier alors ne pas traiter \r\n            //les autres qui peuvent etre asynchrone\r\n            if(this.lastCallPid == callsrv.pid){\r\n                this.logger.log(arr);\r\n                //le flag du data loaded\r\n                this.isDataLoaded = true;\r\n                //le count des checked\r\n                this.changeCheckedCatCount();\r\n                //sort alphabetic\r\n                arr.sort((a, b) => a.name.localeCompare(b.name));\r\n                //init object for ngLoop of checkbox component\r\n                this.arrFilteredCategories = [];\r\n                this.arrAllCategories = [];\r\n                for(var i=0;i<arr.length;i++){\r\n                    var obj:CheckBoxModel = {\r\n                        label: arr[i].name,\r\n                        value: arr[i]._id,\r\n                        checked: (arr[i].checked)? true : false,\r\n                        disabled: (arr[i].activated)? false : true\r\n                    };\r\n                    this.arrAllCategories.push(obj);\r\n                }\r\n                //un duplicate\r\n                this.arrFilteredCategories = this.arrAllCategories;\r\n                //on enable le filterbox input\r\n                this.filterBox.disabled = false;\r\n                //on show le nombre de result\r\n                this.userMessageCountResult(this.arrFilteredCategories.length.toString());\r\n            }else{\r\n                 this.logger.log('rejected pid:' + callsrv.pid);\r\n            }\r\n               \r\n        }, err => {\r\n            //console.warn(err);\r\n            //console.log('callSrv PID:' + callsrv.pid);\r\n            this.logger.warn(err);\r\n            this.errMsg.onConnError('connection', err, callsrv);\r\n        });\r\n    }\r\n\r\n    getCategories(){\r\n        this.logger.log('CategoriesComponent.getCategories()');\r\n        //le service\r\n        let callSrv:HttpCallModel = this.call.getService(this.config.getSettings().api.category.categories, this);\r\n        //le last call pid\r\n        this.lastCallPid = callSrv.pid;\r\n        //this.logger.log(callSrv);   \r\n        this.httpCallSubscriber(callSrv);\r\n    }\r\n\r\n    private changeCheckedCatCount(){\r\n        let counter:number = 0;\r\n        let counterFiltered:number = 0;\r\n        let str:string = '';\r\n        //check ceux qui checker a true\r\n        for(let k in this.arrAllCategories){\r\n            if(this.arrAllCategories[k].checked){\r\n                counter++;\r\n            }\r\n        }\r\n        //la string\r\n        str = this.translate.instant('categories.selection', {count:counter});\r\n        //check ceux qui sont hidden par le filtre\r\n        if(counter && this.filterBox.value != ''){\r\n            for(let k in this.arrFilteredCategories){\r\n                if(this.arrFilteredCategories[k].checked){\r\n                    counterFiltered++;\r\n                }\r\n            }\r\n            //si on a des filterred on affiche comme qui il y des hidden\r\n            if(counter-counterFiltered){\r\n                str += ' ' + this.translate.instant('categories.hidden', {count:(counter-counterFiltered)});    \r\n            }    \r\n        }\r\n        //on change le count afficher\r\n        this.userMessage(str);\r\n    }\r\n\r\n    ngDoCheck() {\r\n        //on regarde combien sont checker sile data est loade\r\n        if(this.isDataLoaded){\r\n            this.changeCheckedCatCount();\r\n        }\r\n        \r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //we have the lang so go fetch the categort listing\r\n        //\"'app.title' | translate:params\"\r\n        this.translate.get('generic.loading')\r\n            .subscribe(str => {\r\n                //on affiche le waiting\r\n                this.userMessage(str);\r\n                //on va chercher les categories\r\n                this.getCategories();\r\n                //3 fois pour tester \r\n                if(this.config.getSettings().api.test.async){\r\n                    this.getCategories();\r\n                    this.getCategories();\r\n                }\r\n                \r\n                \r\n            });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/categories.component.ts","\r\n\r\nimport {Injectable,\r\n        Inject\r\n    } from '@angular/core';\r\nimport {Logger \r\n    } from './logger.service'\r\n\r\n\r\n@Injectable()\r\nexport class RegexPermutationService{\r\n\r\n    constructor(@Inject(Logger) private logger:Logger){\r\n\r\n        //this.logger.log('RegexPermutation.constructor()');\r\n\r\n    }\r\n\r\n    public split(str:string):string[]{\r\n        this.logger.log('RegexPermutation.split(' + str + ')');\r\n\r\n        var word = this.trimKeyword(str);\r\n        //on garde juste les 3 premiers\r\n\t\tvar arr = word.split(' ').slice(0, 3);\r\n        \r\n        return arr;\r\n    }\r\n\r\n    public wordPermutation(arrSplit:string[]):string{\r\n\r\n        this.logger.log('RegexPermutation.wordPermutation()');\r\n\r\n        var arrRes = this.permutateArr(arrSplit);\t\r\n\t\tvar tmp = [''];\r\n        arrRes.forEach(function(item:any, index){\r\n            var str1 = '';\r\n            var str2 = '';\r\n            for(var o=0;o<item.length;o++){\r\n                if(item.length == 1){ //il est seul\r\n                    str1 = '^[a-z0-9\\\\s]{0,}[\\\\s]{1}' + item[o] + '[a-z0-9\\\\s]{0,}'; \tstr2 = '^' + item[o] + '[a-z0-9\\\\s]{0,}';\t\r\n                }else if(o == 0){ //check si le premier et pas tut seul\r\n                    str1 = '^[a-z0-9\\\\s]{0,}[\\\\s]{1}' + item[o] + '[a-z0-9\\\\s]{0,}[\\\\s]{1}'; \t\t\t\t\t \r\n                    str2 = '^' + item[o] + '[a-z0-9\\\\s]{0,}[\\\\s]{1}';\t\r\n                }else if(o == (item.length - 1)){ //check si le dernier et pas tut seul\r\n                    str1 += item[o] + '[a-z0-9\\\\s]{0,}';\r\n                    str2 += item[o] + '[a-z0-9\\\\s]{0,}';\r\n                }else{ //les autres dans le milieu et pas tut seul\r\n                    str1 += item[o] + '[a-z0-9\\\\s]{0,}[\\\\s]{1}';\r\n                    str2 += item[o] + '[a-z0-9\\\\s]{0,}[\\\\s]{1}';\t\t\r\n                    }\r\n                }\r\n            //\r\n            this.arr[0] += str2 + '|' + str1 + '|';\r\n            }, {arr: tmp});\r\n        //\r\n        tmp[0] = tmp[0].substring(0, (tmp[0].length - 1));\r\n        //\r\n        return tmp[0];\t\r\n\r\n\r\n    }\r\n\r\n\r\n    public permutateArr(arrWord:string[]):string[]{\r\n\r\n        this.logger.log('RegexPermutation.permutateArr()');\r\n\r\n\t\tvar results:string[] = [];\r\n\t\tfunction permute(arr:string[], memo:any){\r\n\t\t\tvar cur, memo = memo || [];\r\n\t\t\tfor(var i = 0; i < arr.length; i++){\r\n\t\t\t\tcur = arr.splice(i, 1);\r\n\t\t\t\tif(arr.length === 0){\r\n\t\t\t\t\tresults.push(memo.concat(cur));\r\n\t\t\t\t}\r\n\t\t\t\tpermute(arr.slice(), memo.concat(cur));\r\n\t\t\t\tarr.splice(i, 0, cur[0]);\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t}\t\r\n\t\t//\r\n\t\treturn permute(arrWord, []);\r\n    }\r\n\r\n\r\n\r\n    public trimKeyword(str:string):string{\r\n\r\n        this.logger.log('RegexPermutation.trimKeyword()');\r\n\r\n        str = str.toLowerCase();\r\n        //str = this.regexEscape(str);\r\n        str = str.replace(/[^a-zA-Z0-9\\sÞßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ]/gi, ' ');\r\n\t\tstr = str.replace(/[\\s]+/gi, ' ');\t\r\n\t\tstr = str.trim();\r\n        //to array\r\n\t\treturn str;\r\n\t}\r\n\r\n    public regexEscape(str:string):string{\r\n\r\n        this.logger.log('RegexPermutation.regexEscape()');\r\n\r\n        return str.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\r\n    }\r\n\r\n\r\n\r\n    public wordSpace(word:string):string{\r\n\r\n        this.logger.log('RegexPermutation.wordSpace()');\r\n\r\n\t\t//arr des mots a retenir\r\n\t\tvar str1 = '';\r\n\t\tvar str2 = '';\r\n\t\tvar strLeft = '';\r\n\t\tvar strRight = '';\r\n\t\tvar strRegex = '';\r\n\t\t//\r\n\t\t//le max de chars a 5\r\n\t\tword = word.substring(0,5);\r\n\t\t//on creer un couple de mot de remplacement\r\n\t\tfor(var i=0;i<(word.length-1);i++){\r\n\t\t\tstrLeft = '';\r\n\t\t\tfor(var j=0;j<word.length-(word.length-(i+1));j++){\r\n\t\t\t\tstrLeft += word.charAt(j);\r\n\t\t\t}\r\n\t\t\tstrRight = '';\r\n\t\t\tfor(var j=(i+1);j<word.length;j++){\r\n\t\t\t\tstrRight += word.charAt(j);\r\n\t\t\t}\r\n\t\t\tstr1 += '^' + strLeft + '[a-z0-9]{1,2}' + strRight + '[a-z0-9\\\\s]{0,}|';\r\n\t\t\tstr2 += '^[a-z0-9\\\\s]{0,}[\\\\s]{1}' + strLeft + '[a-z0-9]{1,2}' + strRight + '[a-z0-9\\\\s]{0,}|';\r\n\t\t}\r\n\t\t//strip\r\n\t\tif(str1 != '' && str2 != '' ){\r\n\t\t\tstr1 = str1.substring(0, (str1.length - 1));\r\n\t\t\tstr2 = str2.substring(0, (str2.length - 1));\r\n\t\t\tstrRegex = str1 + '|' + str2;\r\n\t\t}\r\n\t\t//le retour\r\n\t\treturn strRegex;\t\r\n\t}\r\n\r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/regexpermutation.service.ts","module.exports = \"<div>\\r\\n    <div>\\r\\n        <h3>{{ 'categories.title' | translate }}</h3>\\r\\n    </div>\\r\\n    <div>\\r\\n        <filterbox \\r\\n            [filterboxParams]=\\\"filterBox\\\" \\r\\n            (onChangeInputValue)=\\\"onFilterboxInputValueChange($event)\\\"  \\r\\n        ></filterbox>\\r\\n    </div>\\r\\n</div>\\r\\n<div> \\r\\n    <usermsg \\r\\n        [usermsgParams]=\\\"userMsg\\\"\\r\\n    ></usermsg>\\r\\n     <usermsg \\r\\n        [usermsgParams]=\\\"userMsgCountResult\\\"\\r\\n    ></usermsg>\\r\\n</div>        \\r\\n<div class=\\\"listing-box\\\"> \\r\\n    <div class=\\\"listing\\\">\\r\\n        <div *ngFor=\\\"let cat of arrFilteredCategories\\\">\\r\\n            <checkbox \\r\\n                [checkboxParams]=\\\"cat\\\"\\r\\n            ></checkbox>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/categories.component.html\n// module id = 646\n// module chunks = 1","module.exports = \"div.listing-box{\\r\\npadding:10px;\\r\\nborder: 1px solid rgba(0,0,0,.15);\\r\\nborder-radius: 3px;\\r\\nmargin-bottom: 20px;\\r\\nclear:both;\\r\\n}\\r\\ndiv.listing-box > div.listing{\\r\\nheight: 130px;\\r\\noverflow-y: auto;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/categories.component.css\n// module id = 647\n// module chunks = 1","\r\n\r\nimport {Component,\r\n        Injector,\r\n        ReflectiveInjector } from '@angular/core'\r\nimport {TranslateService } from 'ng2-translate'\r\nimport {ConfigService \r\n    } from '@ngx-config/core';\r\n\r\nimport {UserMsgComponent } from './usermsg.component'\r\nimport {SearchBoxComponent } from './searchbox.component'\r\nimport {UserMsgModel} from './models/usermsg.model'\r\nimport {SearchHistoryModel } from './models/searchhistory.model'\r\nimport {Logger } from './logger.service'\r\n\r\nimport {HttpCallService } from './httpcall.module';\r\nimport {HttpCallModel} from './models/httpcall.model'\r\n\r\nimport {ErrMsgService } from './errmsg.service'\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'historics',\r\n    template: require('./historics.component.html'),\r\n    providers: [\r\n        ErrMsgService\r\n        ]\r\n})\r\n\r\nexport class HistoricsComponent{\r\n\r\n    private arrSearch:SearchHistoryModel[] = [];\r\n    private userMsg:UserMsgModel;\r\n    private lastCallPid:number = 0;\r\n    \r\n    constructor(private logger:Logger, \r\n                private translate: TranslateService,\r\n                private config:ConfigService, \r\n                private call:HttpCallService,\r\n                private errMsg:ErrMsgService\r\n        ){\r\n        //user messgae\r\n        this.userMessage();\r\n    }\r\n\r\n    userMessage(str:string ='', style:string = ''){\r\n        this.userMsg = {\r\n            class: style,       \r\n            value: str\r\n        }; \r\n    }\r\n   \r\n    ngAfterViewInit() {\r\n        //this.logger.log('HistoricsComponent.ngAfterViewInit()'); \r\n        this.translate.get('generic.loading').subscribe(str => {\r\n            this.userMessage(str);\r\n            this.getHistory();\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    httpCallSubscriber(callsrv:HttpCallModel){\r\n        callsrv.obs.subscribe(arr => {\r\n            this.logger.log('timer:' + (new Date().getTime() - callsrv.timestamp));\r\n            this.logger.log('pid:' + callsrv.pid);\r\n            //this.logger.log(callsrv);\r\n            //si pas le dernier alors ne pas traiter \r\n            //les autres qui peuvent etre asynchrone\r\n            if(this.lastCallPid == callsrv.pid){\r\n                this.logger.log(arr);\r\n                this.userMessage();\r\n                this.arrSearch = arr;\r\n            }else{\r\n                this.logger.log('rejected pid:' + callsrv.pid);\r\n            }\r\n           \r\n            \r\n        }, err => {\r\n            //console.warn(err);\r\n            //console.log('callSrv PID:' + callsrv.pid);\r\n            this.logger.warn(err);\r\n            this.errMsg.onConnError('connection', err, callsrv);\r\n        });\r\n    }\r\n\r\n    private getHistory(){\r\n        this.logger.log('HistoricsComponent.getHistory()');\r\n        //le service\r\n\t\t//to generate a bad service call\r\n        //let callSrv:HttpCallModel = this.call.getService(this.config.getSettings().api.test.badservice, this);\r\n        let callSrv:HttpCallModel = this.call.getService(this.config.getSettings().api.search.history, this);\r\n        //le last call pid\r\n        this.lastCallPid = callSrv.pid;\r\n        //this.logger.log(callSrv);    \r\n        this.httpCallSubscriber(callSrv);\r\n        \r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/historics.component.ts","module.exports = \"<div>\\r\\n    <h5>{{ 'historics.title' | translate }}</h5>\\r\\n</div>\\r\\n<div>\\r\\n    <usermsg \\r\\n        [usermsgParams]=\\\"userMsg\\\"\\r\\n    ></usermsg>\\r\\n</div>    \\r\\n<div>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let kw of arrSearch\\\">\\r\\n            {{kw.name}} ({{kw.count}})\\r\\n        </li>        \\r\\n    </ul>\\r\\n</div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/historics.component.html\n// module id = 649\n// module chunks = 1","\r\n\r\nimport {Component,\r\n        Injector,\r\n        ReflectiveInjector } from '@angular/core'\r\nimport {TranslateService } from 'ng2-translate'\r\nimport {ConfigService \r\n    } from '@ngx-config/core';\r\n\r\nimport {UserMsgComponent } from './usermsg.component'\r\nimport {SearchBoxComponent } from './searchbox.component'\r\nimport {UserMsgModel} from './models/usermsg.model'\r\nimport {SearchPopularModel } from './models/searchpopular.model'\r\nimport {Logger } from './logger.service'\r\n\r\nimport {HttpCallService } from './httpcall.module';\r\nimport {HttpCallModel} from './models/httpcall.model'\r\n\r\nimport {ErrMsgService } from './errmsg.service'\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'populars',\r\n    template: require('./populars.component.html'),\r\n    providers: [\r\n        ErrMsgService\r\n        ]\r\n})\r\n\r\nexport class PopularsComponent{\r\n\r\n    private arrSearch:SearchPopularModel[] = [];\r\n    private userMsg:UserMsgModel;\r\n    private lastCallPid:number = 0;\r\n    \r\n    constructor(private logger:Logger, \r\n                private translate: TranslateService,\r\n                private config:ConfigService, \r\n                private call:HttpCallService,\r\n                private errMsg:ErrMsgService\r\n        ){\r\n        //user messgae\r\n        this.userMessage();\r\n    }\r\n\r\n    \r\n    ngAfterViewInit() {\r\n        this.translate.get('generic.loading').subscribe(str => {\r\n            this.userMessage(str);;\r\n            this.getPopular();\r\n        });\r\n        \r\n    }\r\n\r\n    userMessage(str:string = '', style:string = ''){\r\n        this.userMsg = {\r\n            class: style,       \r\n            value: str\r\n        }; \r\n    }\r\n\r\n    httpCallSubscriber(callsrv:HttpCallModel){\r\n        callsrv.obs.subscribe(arr => {\r\n            this.logger.log('timer:' + (new Date().getTime() - callsrv.timestamp));\r\n            this.logger.log('pid:' + callsrv.pid);\r\n            //this.logger.log(callsrv);\r\n            //si pas le dernier alors ne pas traiter \r\n            //les autres qui peuvent etre asynchrone\r\n            if(this.lastCallPid == callsrv.pid){\r\n                this.logger.log(arr);\r\n                this.userMessage();\r\n                this.arrSearch = arr;\r\n            }else{\r\n                this.logger.log('rejected pid:' + callsrv.pid);\r\n            }\r\n            \r\n            \r\n        }, err => {\r\n            //console.warn(err);\r\n            //console.log('callSrv PID:' + callsrv.pid);\r\n            this.logger.warn(err);\r\n            this.errMsg.onConnError('connection', err, callsrv);\r\n        });\r\n\r\n    }\r\n\r\n    private getPopular(){\r\n        this.logger.log('PopularsComponent.getPopular()');\r\n        //le service\r\n\t\t//to generate json error test\r\n        //let callSrv:HttpCallModel = this.call.getService(this.config.getSettings().api.test.badjson, this);\r\n\t\tlet callSrv:HttpCallModel = this.call.getService(this.config.getSettings().api.search.popular, this);\r\n        this.lastCallPid = callSrv.pid;\r\n        //le last call pid\r\n        //this.logger.log(callSrv);    \r\n        this.httpCallSubscriber(callSrv);\r\n        \r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/populars.component.ts","module.exports = \"<div>\\r\\n    <h5>{{ 'populars.title' | translate }}</h5>\\r\\n</div>\\r\\n<div>\\r\\n    <usermsg \\r\\n        [usermsgParams]=\\\"userMsg\\\"\\r\\n    ></usermsg>\\r\\n</div>    \\r\\n<div>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let kw of arrSearch\\\">\\r\\n            {{kw.name}} ({{kw.count}})\\r\\n        </li>        \\r\\n    </ul>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/populars.component.html\n// module id = 651\n// module chunks = 1","\r\n\r\nimport {Component,\r\n        Input } from '@angular/core'\r\nimport {Logger} from './logger.service'\r\nimport {UserMsgModel} from './models/usermsg.model'\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'usermsg',\r\n    template: require('./usermsg.component.html'),\r\n    styles: [\r\n        require('./usermsg.component.css')\r\n        ]\r\n})\r\n\r\nexport class UserMsgComponent{\r\n    \r\n    @Input() usermsgParams:UserMsgModel;\r\n    \r\n    constructor(private logger:Logger){\r\n        //this.logger.log('UserMsgComponent.constructor()'); \r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/usermsg.component.ts","\r\n\r\nexport class UserMsgModel {\r\n    value:string;\r\n    class:string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/models/usermsg.model.ts","module.exports = \"<div [class]=\\\"usermsgParams.class\\\">\\r\\n    <span [innerHTML]=\\\"usermsgParams.value\\\"></span>\\r\\n</div>    \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/usermsg.component.html\n// module id = 654\n// module chunks = 1","module.exports = \"div{\\r\\ncolor: #5bc0de;\\r\\nmargin-bottom: 10px;\\r\\nfont-size: small;\\r\\npadding:0 5px;\\r\\nborder-radius: 3px;\\r\\nfloat:left;\\r\\n}\\r\\ndiv.err{\\r\\nbackground-color: rgba(201, 48, 44, 0.2);\\r\\npadding: 5px 10px;\\r\\ncolor: #c9302c;\\r\\nfont-size: small;\\r\\nborder: 1px solid #c9302c;\\r\\n}\\r\\ndiv.ok{\\r\\nbackground-color: rgba(92, 184, 92, 0.20);\\r\\npadding: 5px 10px;\\r\\ncolor: #3c763d;\\r\\nfont-size: small;\\r\\nborder: 1px solid #3c763d;\\r\\n}\\r\\ndiv.warn{\\r\\nbackground-color: rgba(236, 151, 31, 0.2);\\r\\npadding: 5px 10px;\\r\\ncolor: #ec971f;\\r\\nfont-size: small;\\r\\nborder: 1px solid #ec971f;\\r\\n}\\r\\ndiv.counter{\\r\\npadding: 0px 4px;\\r\\ncolor: #ec971f;\\r\\nfont-size: small;\\r\\nborder: 1px solid #ec971f;\\r\\nfloat:right;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/usermsg.component.css\n// module id = 655\n// module chunks = 1","\r\n\r\nimport {Component \r\n         } from '@angular/core'\r\nimport {Logger} from './logger.service'\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'searchbox',\r\n    template: require('./searchbox.component.html'),\r\n    styles: [\r\n        require('./searchbox.component.css')\r\n        ]\r\n})\r\n\r\nexport class SearchBoxComponent{\r\n\r\n    constructor(private logger:Logger){\r\n        //this.logger.log('SearchBoxComponent.constructor()'); \r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.logger.log('SearchBoxComponent.ngOnInit()'); \r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //this.logger.log('SearchBoxComponent.ngAfterViewInit()'); \r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/searchbox.component.ts","module.exports = \"<div class=\\\"form-group\\\">\\r\\n    <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"{{ 'searchbox.placeholder' | translate }}\\\" />\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/searchbox.component.html\n// module id = 657\n// module chunks = 1","module.exports = \"input[type=\\\"text\\\"]:focus{\\r\\ncolor:#5cb3fd;\\r\\n}\\r\\ninput[type=\\\"text\\\"]{\\r\\nmargin: 10px 0;\\r\\ncolor:rgba(91, 192, 222, 0.5);\\r\\n}\\r\\n/* placeholder */\\r\\ninput[type=\\\"text\\\"]::-webkit-input-placeholder { /* Chrome/Opera/Safari */\\r\\n  color: #ddd;\\r\\n}\\r\\ninput[type=\\\"text\\\"]::-moz-placeholder { /* Firefox 19+ */\\r\\n  color: #ddd;\\r\\n}\\r\\ninput[type=\\\"text\\\"]:-ms-input-placeholder { /* IE 10+ */\\r\\n  color: #ddd;\\r\\n}\\r\\ninput[type=\\\"text\\\"]:-moz-placeholder { /* Firefox 18- */\\r\\n  color: #ddd;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/searchbox.component.css\n// module id = 658\n// module chunks = 1","\r\n\r\nimport {Component,\r\n        Input,\r\n        Output,\r\n        OnChanges,\r\n        SimpleChange,\r\n        EventEmitter \r\n        } from '@angular/core'\r\nimport {Logger} from './logger.service'\r\nimport {FilterBoxModel} from './models/filterbox.model'\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'filterbox',\r\n    template: require('./filterbox.component.html'),\r\n    styles: [\r\n        require('./filterbox.component.css')\r\n        ]\r\n})\r\n\r\nexport class FilterBoxComponent implements OnChanges{\r\n\r\n    @Input() filterboxParams:FilterBoxModel;\r\n    @Output() onChangeInputValue = new EventEmitter<string>();\r\n    \r\n    constructor(private logger:Logger){\r\n        //this.logger.log('FilterBoxComponent.constructor()');\r\n    }\r\n\r\n    onKey(value:string){\r\n        this.logger.log('FilterBoxComponent.onKey(' + value + ')');\r\n        //pour avoir une cocordance avec le parent qui initie le filterbox\r\n        this.filterboxParams.value = value;\r\n        //on emet un event a ceux qui ecoute\r\n        this.onChangeInputValue.emit(value);\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.logger.log('FilterBoxComponent.ngOnInit()'); \r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //this.logger.log('FilterBoxComponent.ngAfterViewInit()'); \r\n    }\r\n\r\n    ngOnChanges(changes: {[propKey: string]: SimpleChange}){\r\n        //this.logger.log('FilterBoxComponent.ngOnChanges()'); \r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/filterbox.component.ts","\r\n\r\nexport class FilterBoxModel {\r\n    value:string;\r\n    disabled:boolean;\r\n    placeholder:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/models/filterbox.model.ts","module.exports = \"<div class=\\\"form-group\\\">\\r\\n    <input \\r\\n        #input \\r\\n        class=\\\"form-control form-control-sm\\\" \\r\\n        type=\\\"text\\\" \\r\\n        [placeholder]=\\\"filterboxParams.placeholder\\\" \\r\\n        [value]=\\\"filterboxParams.value\\\" \\r\\n        [disabled]=\\\"filterboxParams.disabled\\\" \\r\\n        (keyup)=\\\"onKey(input.value)\\\" \\r\\n    />\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/filterbox.component.html\n// module id = 661\n// module chunks = 1","module.exports = \"input[type=\\\"text\\\"]:focus{\\r\\ncolor:#5cb3fd;\\r\\ntext-transform: uppercase;\\r\\n}\\r\\ninput[type=\\\"text\\\"]{\\r\\nmargin: 10px 0;\\r\\ncolor:rgba(91, 192, 222, 0.5);\\r\\n}\\r\\n/*\\r\\ninput[type=\\\"text\\\"]{\\r\\nheight: 30px;\\r\\npadding: 5px 10px;\\r\\nfont-size: 12px;\\r\\nline-height: 1.5;\\r\\nborder-radius: 3px;\\r\\n}\\r\\n*/\\r\\n/* placeholder */\\r\\ninput[type=\\\"text\\\"]::-webkit-input-placeholder { /* Chrome/Opera/Safari */\\r\\n  color: #ddd;\\r\\n}\\r\\ninput[type=\\\"text\\\"]::-moz-placeholder { /* Firefox 19+ */\\r\\n  color: #ddd;\\r\\n}\\r\\ninput[type=\\\"text\\\"]:-ms-input-placeholder { /* IE 10+ */\\r\\n  color: #ddd;\\r\\n}\\r\\ninput[type=\\\"text\\\"]:-moz-placeholder { /* Firefox 18- */\\r\\n  color: #ddd;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/filterbox.component.css\n// module id = 662\n// module chunks = 1","\r\n\r\nimport {Component,\r\n        Input } from '@angular/core'\r\nimport {Logger} from './logger.service'\r\nimport {CheckBoxModel } from './models/checkbox.model'\r\n\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'checkbox',\r\n    template: require('./checkbox.component.html'),\r\n    styles: [\r\n        require('./checkbox.component.css')\r\n        ],\r\n    \r\n})\r\n\r\nexport class CheckBoxComponent{\r\n    \r\n    @Input() checkboxParams:CheckBoxModel;\r\n    \r\n    constructor(private logger:Logger){\r\n        //this.logger.log('CheckBoxComponent.constructor()');   \r\n    }\r\n\r\n    onCheckboxStateChange(state:boolean){\r\n         this.logger.log('CheckBoxComponent.onCheckboxStateChange(' + state + ')');\r\n         this.checkboxParams.checked = state;\r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.logger.log('CheckBoxComponent.ngOnInit()'); \r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //this.logger.log('CheckBoxComponent.ngAfterViewInit()'); \r\n    }\r\n    \r\n    ngOnChanges(){\r\n        //this.logger.log('CheckBoxComponent.ngOnChanges()'); \r\n    }\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/checkbox.component.ts","//models of arrCategories\r\nexport class CheckBoxModel {\r\n    label:string;\r\n    value:string;\r\n    disabled:boolean;\r\n    checked:boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/models/checkbox.model.ts","module.exports = \"<div class=\\\"form-check\\\">\\r\\n    <label class=\\\"form-check-label\\\">\\r\\n        <input \\r\\n        class=\\\"form-check-input\\\" \\r\\n        type=\\\"checkbox\\\" \\r\\n        [value]=\\\"checkboxParams.value\\\" \\r\\n        [checked]=\\\"checkboxParams.checked\\\" \\r\\n        [disabled]=\\\"checkboxParams.disabled\\\" \\r\\n        (onChangeCheckedState)=\\\"onCheckboxStateChange($event)\\\" \\r\\n        checkbox\\r\\n        >\\r\\n        <div class=\\\"text\\\" [innerHTML]=\\\"checkboxParams.label\\\"></div> \\r\\n    </label>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/checkbox.component.html\n// module id = 665\n// module chunks = 1","module.exports = \"/* \\r\\nparent label element of the checkbox element \\r\\n*/\\r\\nlabel.label-checked{\\r\\ncolor:#31b0d5;\\r\\n}\\r\\nlabel.label-disabled{\\r\\nopacity:0.5;\\r\\n}\\r\\n/*\\r\\nlabel text adjustment\\r\\n*/\\r\\nlabel .text{\\r\\n/*margin-top: -2px;*/\\r\\nfont-size: smaller;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/checkbox.component.css\n// module id = 666\n// module chunks = 1","\r\n\r\nimport {Directive, \r\n        ElementRef, \r\n        Renderer,\r\n        Output,\r\n        EventEmitter, \r\n        HostListener} from '@angular/core'\r\nimport { Logger } from './logger.service'\r\n\r\n@Directive({\r\n    selector: '[checkbox]',\r\n})\r\n\r\nexport class CheckBoxDirective{\r\n    //checkbox state\r\n    private checked:boolean;\r\n    private disabled:boolean;\r\n    //le state emitter\r\n    @Output() onChangeCheckedState = new EventEmitter<boolean>();\r\n\r\n    //label parent style of the checkbox to apply\r\n    private checkedStyle:string = 'label-checked';\r\n    private disabledStyle:string = 'label-disabled';\r\n    private labelElement:Element;\r\n\r\n    constructor(private el: ElementRef, \r\n                private rend: Renderer, \r\n                private logger:Logger\r\n        ){\r\n        //this.logger.log(\"CheckBoxDirective.constructor()\");  \r\n        this.labelElement = this.el.nativeElement.parentElement;  \r\n    }\r\n\r\n    ngOnInit() {\r\n        //this.logger.log('CheckBoxDirective.ngOnInit()');\r\n        this.checked = this.el.nativeElement.checked; \r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        //this.logger.log('CheckBoxDirective.ngAfterViewInit()'); \r\n        this.checked = this.el.nativeElement.checked;\r\n        this.disabled = this.el.nativeElement.disabled; \r\n        this.changeStyle();\r\n    }\r\n\r\n    private changeStyle(){\r\n        this.rend.setElementClass(this.labelElement, this.checkedStyle, this.checked);\r\n        this.rend.setElementClass(this.labelElement, this.disabledStyle, this.disabled);\r\n    }\r\n\r\n    @HostListener('change', ['$event.target.checked']) private onchange(state:boolean) {\r\n         //this.logger.log(\"CheckBoxDirective.@HostListener('change') onchange(\" + state + \")\");\r\n         this.checked = state;\r\n         this.onChangeCheckedState.emit(this.checked);\r\n         this.changeStyle();\r\n        \r\n    }\r\n\r\n  \r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/checkbox.directive.ts","\r\n\r\nimport {Component } from '@angular/core'\r\nimport {TranslateService } from 'ng2-translate'\r\n\r\nimport {UserMsgComponent } from './usermsg.component'\r\nimport {SearchBoxComponent } from './searchbox.component'\r\nimport {Logger } from './logger.service'\r\n\r\n@Component({\r\n    moduleId: module.id.toString(),\r\n    selector: 'exercises',\r\n    template: require('./exercises.component.html'),\r\n    providers: [\r\n        ]\r\n})\r\n\r\nexport class ExercisesComponent{\r\n\r\n    constructor(private logger:Logger, \r\n                private translate: TranslateService\r\n        ){\r\n        //this.logger.log('HistoricsComponent.constructor()');\r\n        }\r\n\r\n    ngOnInit(){\r\n        //this.logger.log('HistoricsComponent.ngOnInit()');\r\n    }\r\n    \r\n    ngAfterViewInit() {\r\n        //this.logger.log('HistoricsComponent.ngAfterViewInit()'); \r\n    }\r\n\r\n}\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/exercises.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h3 [innerHTML]=\\\"'exercises.title' | translate:params\\\"></h3>\\r\\n    </div>        \\r\\n</div> \\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <searchbox></searchbox>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <historics></historics>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n        <populars></populars>\\r\\n    </div>\\r\\n</div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/exercises.component.html\n// module id = 669\n// module chunks = 1","\r\n\r\nimport {NgModule, \r\n        ModuleWithProviders,\r\n        Injectable,\r\n        Inject \r\n    } from '@angular/core';\r\nimport {Http, \r\n        Headers,\r\n        Request,\r\n        Response,\r\n        RequestOptionsArgs,\r\n        RequestMethod,\r\n        RequestOptions\r\n    } from '@angular/http';\r\nimport {Observable\r\n    } from 'rxjs/Observable'\r\nimport {ConfigService \r\n    } from '@ngx-config/core';\r\n\r\nimport 'rxjs/add/operator/retry';\r\nimport 'rxjs/add/operator/timeout';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n\r\nimport {HttpCallModel\r\n    } from './models/httpcall.model'\r\n\r\n\r\n\r\n@NgModule({})\r\nexport class HttpCallModule {\r\n\r\n    \r\n    static forRoot(obj?: any): ModuleWithProviders {\r\n        return {\r\n            ngModule: HttpCallModule,\r\n            providers: [HttpCallService]\r\n        };\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n@Injectable()\r\nexport class HttpCallService{\r\n\r\n    private processId:number;\r\n    private host:string;\r\n    private port:number;\r\n    private retryWhen:number;\r\n    private timeout:number;\r\n    \r\n    //for testing calls\r\n    private delay:number = 0;\r\n    private async:boolean = false;\r\n    private substract:number = 0;\r\n\r\n    constructor(\r\n        private http:Http, \r\n        private config:ConfigService\r\n        ){\r\n\r\n        //console.warn('HttpCallService.constructor()'); \r\n        //local\r\n        this.processId = 100;\r\n        //by config\r\n        this.host = this.config.getSettings().api.http.host;\r\n        this.port = this.config.getSettings().api.http.port;\r\n        this.retryWhen = this.config.getSettings().api.http.retry;\r\n        this.timeout = this.config.getSettings().api.http.timeout;\r\n        //by config for test\r\n        this.async = this.config.getSettings().api.test.async;\r\n        this.substract = this.config.getSettings().api.test.substract;\r\n        //si async alors on rajoute le delai\r\n        if(this.async){\r\n            this.delay = this.config.getSettings().api.test.delay;\r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    private getProcessId(){\r\n        return this.processId++;\r\n    }\r\n\r\n    public callService(service:string, pid:number, search:Object):Observable<any[]>{\r\n\r\n        //console.warn('++= callService');\r\n        //console.log(service);\r\n        //console.log(pid);\r\n        //console.log(search);\r\n\r\n        //test asynchrone\r\n        if(this.async){\r\n            this.delay -= this.substract;    \r\n        }\r\n\r\n        let url:string =  this.host + ':' + this.port + service;\r\n        console.log(url);\r\n        var req = new Request(\r\n            new RequestOptions({\r\n                url: url,\r\n                method: RequestMethod.Get,\r\n                search: search,\r\n                headers: this.createAuthHeaders(),\r\n                body: null\r\n                })\r\n            );\r\n\r\n         return this.http\r\n            .request(req)\r\n            .retryWhen((error) => {\r\n                //no retry let the caller handle the error                \r\n                throw {code:'ERR404'};    \r\n                //with retry\r\n                //return error.delay(this.retryWhen);\r\n            })\r\n            .timeoutWith(this.timeout, Observable.throw({code:'ERR001'}))\r\n            .map((res:Response) => {\r\n                if(res.status != 200){\r\n                    throw {code:'ERR' + res.status};    \r\n                }else{\r\n                    try{\r\n                        return res.json();\r\n                    }catch(e){\r\n                        throw {code:'ERR900'};\r\n                    }\r\n                }\r\n            })\r\n            .catch((error:any) => {\r\n                return Observable.throw(error);\r\n            })\r\n            .delay(this.delay);\r\n            \r\n            \r\n  \r\n    }\r\n\r\n    public getService(service:string, owner:any, search:Object = {}):HttpCallModel{\r\n        let pid = this.getProcessId();\r\n        let callSrv:HttpCallModel = {\r\n            pid: pid,\r\n            srv: service,\r\n            obs: this.callService(service, pid, search),\r\n            timestamp: new Date().getTime(),\r\n            search: search,\r\n            attempt:0,\r\n            owner: owner\r\n        };\r\n        return callSrv;\r\n\r\n    }\r\n\r\n    private createAuthHeaders(): Headers{\r\n        let headers = new Headers({\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        });\r\n\r\n        /*\r\n        if(this.userService.user) {\r\n            headers.set('Authorization', this.identityService.user.token);\r\n        }\r\n        */\r\n        return headers;\r\n    }\r\n        \r\n    \r\n    \r\n            \r\n    \r\n}\r\n\r\n\r\n\r\n//END SCRIPT\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/httpcall.module.ts"],"sourceRoot":""}